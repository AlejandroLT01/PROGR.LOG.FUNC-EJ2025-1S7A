import Codec.Picture

-- Convierte un pixel en escala de grises
toGray :: PixelRGB8 -> PixelRGB8
toGray (PixelRGB8 r g b) =
    let gray = round (fromIntegral r * 0.3 + fromIntegral g * 0.59 + fromIntegral b * 0.11)
    in PixelRGB8 gray gray gray

-- Aplica la conversiÃ³n a toda la imagen
convertToGrayscale :: DynamicImage -> DynamicImage
convertToGrayscale (ImageRGB8 img) =
    ImageRGB8 (pixelMap toGray img)
convertToGrayscale img = img  -- Si no es RGB, la deja igual

main :: IO ()
main = do
    result <- readImage "imagen_original.png"
    case result of
        Left err -> putStrLn $ "Error al cargar la imagen: " ++ err
        Right img -> do
            let newImg = convertToGrayscale img
            savePngImage "imagen_gris.png" newImg
            putStrLn "Imagen convertida y guardada como imagen_gris.png"
